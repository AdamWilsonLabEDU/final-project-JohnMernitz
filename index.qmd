---
title: "Analysis of Urban Tree Cover: City of Buffalo 2024"
author: Jack Mernitz
subtitle: Work in Progress- 'Pay no attention to the man behind the curtain'
date: today
date-format: long
format:
  html:
    theme: spacelab
    toc: true
    toc-location: left
    toc-title: "Content Sections"
    code-fold: true
---

# Introduction

Trees are often overlooked as a component of urban spaces. With so much focus on the growth of infrastructure, living space, and work spaces, green places are left little room to grow. Tree leaf area coverage, while possibly annoying for lawn owners in the fall, is directly related to shade capacity and other environmental benefits of trees. Permeable surfaces where trees grow also reduce runoff, trees cool the surrounding air in sufficient density, and the mental and aesthetic benefits of green spaces in urban areas for residents and tourists are notable. Urban forestry bureaus seek to classify and present some of these benefits to the public.

Quantifying and estimating the possible value of these services in relation to tree occurrence seemed like an interesting topic to delve into. Vacant spots and stumps of former trees cannot provide benefits any longer. While an intensive endeavor to replace fully grown trees, my project seeks to enumerate how useful it could be to increase tree cover. Parsing data to assign relative values for comparable trees will assist in more accurate estimation of services. Individual versus collective benefit will also be questioned, but only after calculation of total possible benefits are complete.

# Materials and methods

## The Dataset

Publicly available data from the City of Buffalo Department of Public Works: Bureau of Forestry exists as a list of tree inventory within the City proper. This includes multiple categories to represent trees' ecosystem services. Downloading and processing this data is necessary, as there are 133,229 entries in the dataset. The data is organized into 28 columns, and each row is a tree site. It is a daily updated dataset existing since 2018.

## Install and Load Packages

```{r, message=F, warning=F, results=F}
install.packages("mapview")
install.packages("hrbrthemes")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(hrbrthemes)
library(mapview)
library(leaflet)
library(kableExtra)
library(htmlwidgets)
library(widgetframe)
knitr::opts_chunk$set(widgetframe_widgets_dir = 'widgets' ) 
knitr::opts_chunk$set(cache=TRUE)  # cache the results for quick compiling
```

## Downloading the required data

```{r}
tree_data <- read.csv("https://data.buffalony.gov/api/views/n4ni-uuec/rows.csv?accessType=DOWNLOAD")
```

A sample of how the dataset is organized.

```{r, results='asis'}
tree_data %>% 
  slice(1:5) %>% #show only 1:n rows
  kable(digits=2,align="c")%>% #make table and round to two digits
  kable_styling(bootstrap_options = 
                  c("striped", "hover", "condensed", "responsive")) 
```

Filter out 'unsuitable vacant' sites.
```{r}
tree_suitable <- tree_data %>%
  filter(tree_data[,2] != "unsuitable vacant")
tree_filtered <- tree_suitable %>%
  filter(tree_suitable[,3] != "0")
```


Resulting data split into vacant, stump, and used sites and compared.
```{r}
stump_data <- tree_filtered %>%
  filter(tree_filtered[,2] == "STUMP")

vacant_data <- tree_filtered %>%
  filter(tree_filtered[,2] == "VACANT")

treeonly_data <- tree_filtered %>%
  filter(!(tree_filtered[,2] %in% c("STUMP", "VACANT")))

stump_data %>%
  head(5) %>%
  kable() %>%
  kable_styling(bootstrap_options = 
                  c("striped", "hover", "condensed", "responsive"))

vacant_data %>%
  head(5) %>%
  kable() %>%
  kable_styling(bootstrap_options = 
                  c("striped", "hover", "condensed", "responsive"))

treeonly_data %>%
  head(5) %>%
  kable() %>%
  kable_styling(bootstrap_options = 
                  c("striped", "hover", "condensed", "responsive"))
```

Species count analysis.

```{r fig.width=10, fig.height=6, warning=F}
treeonly_data %>%
  # Count occurrences of each unique value in the third column
  count(!!sym(names(treeonly_data)[3])) %>% 
  arrange(n) %>%  # Sort by count
  top_n(15, n) %>%
  mutate(!!names(treeonly_data)[3] := factor(!!sym(names(treeonly_data)[3]), levels = unique(!!sym(names(treeonly_data)[3])))) %>%  # Factor for ordered axis
  ggplot(aes(x = !!sym(names(treeonly_data)[3]), y = n)) +  # Use the count (n) on the y-axis
    geom_segment(aes(x = !!sym(names(treeonly_data)[3]), xend = !!sym(names(treeonly_data)[3]), y = 0, yend = n), color = "gray") +  # Add segments
    geom_point(size = 3, color = "#654194") +  # Add points
    coord_flip() +  # Flip coordinates to make the plot horizontal
    theme_ipsum() +  # Apply hrbrthemes style
    theme(
      panel.grid.minor.y = element_blank(),
      panel.grid.major.y = element_blank(),
      legend.position = "none"  # Hide the legend
    ) +
    xlab("") 
```

Assessment of resource values by species.
```{r}

```

# Results

Rounded proportionate spread forecasted for vacant sites.
```{r}

```

# Conclusions

# References
